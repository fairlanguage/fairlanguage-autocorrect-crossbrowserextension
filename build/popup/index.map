{"version":3,"sources":["../controller/storage.js","index.js"],"names":["StorageController","Promise","resolve","reject","chrome","storage","local","get","settings","enabled","consent","toolbar","set","Error","mode","currentHost","window","location","hostname","console","log","hosts","name","find","hostInStorage","push","index","indexOf","displayVersion","document","getElementById","statusEnabled","buttonEnabled","statusConsent","buttonConsent","displaySettings","statusToolbar","buttonToolbar","displayActive","buttonActiveEnable","buttonActiveDisable","display","statusHosts","buttonResetHosts","getSettings","then","value","JSON","stringify","textContent","catch","error","getCurrentHostSettings","tabs","query","active","currentWindow","currentHostname","URL","url","getHostSettings","getHosts","length","addEventListener","sendMessage","id","command","runtime","onMessage","addListener","undefined","_settings","host","resetAllHosts","manifest","version"],"mappings":"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","file":"index.map","sourceRoot":"../../src/popup","sourcesContent":["export default class StorageController {\n\n  constructor() {\n    return 'I controll the storage.';\n  }\n\n  static getSettings() {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['settings'], (storage) => {\n\n        if (storage.settings) {\n          resolve(storage.settings);\n        } else {\n          const settings = {\n            enabled: true,\n            consent: false,\n            toolbar: false,\n          };\n    \n          chrome.storage.local.set({ settings }, () => {\n            resolve(settings);\n          });\n        }\n\n        reject(new Error('Reading settings from local storage'));\n      \n      });\n\n    });\n\n  }\n\n  static setEnabled(mode = 'toggle') {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['settings'], (storage) => {\n\n        const settings = storage.settings;\n\n        //console.log(settings)\n\n        settings.enabled = mode === 'toggle' ? !settings.enabled : mode;\n\n        //console.log(settings)\n\n        chrome.storage.local.set({ settings: settings }, () => {\n\n          if (settings) {\n            resolve(settings.consent);\n          } else {\n            reject(new Error('Writing enabled settings to local storage'));\n          }\n\n        });\n\n      });\n\n    });\n\n  }\n\n  static setConsent(mode = 'toggle') {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['settings'], (storage) => {\n\n        const settings = storage.settings;\n\n        //console.log(settings)\n\n        settings.consent = mode === 'toggle' ? !settings.consent : mode;\n\n        //console.log(settings)\n\n        chrome.storage.local.set({ settings: settings }, () => {\n\n          if (settings) {\n            resolve(settings.consent);\n          } else {\n            reject(new Error('Writing consent settings to local storage'));\n          }\n\n        });\n\n      });\n\n    });\n\n  }\n\n  static setToolbar(mode = 'toggle') {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['settings'], (storage) => {\n\n        const settings = storage.settings;\n\n        //console.log(settings)\n\n        settings.toolbar = mode === 'toggle' ? !settings.toolbar : mode;\n\n        //console.log(settings)\n\n        chrome.storage.local.set({ settings: settings }, () => {\n\n          if (settings) {\n            resolve(settings.toolbar);\n          } else {\n            reject(new Error('Writing toolbar settings to local storage'));\n          }\n\n        });\n\n      });\n\n    });\n\n  }\n\n  static getHostSettings(currentHost = window.location.hostname) {\n\n    return new Promise((resolve, reject) => {\n\n      let settings;\n\n      chrome.storage.local.get(['hosts'], (storage) => {\n\n        console.log(storage.hosts)\n\n        // If there aren't any entries, start with this one\n        if (!storage.hosts) {\n          settings = {\n            enabled: null,\n            name: currentHost,\n          };\n    \n          chrome.storage.local.set({ hosts: [settings] }, () => {\n            resolve(settings);\n          });\n        }\n\n        // Look up this host\n        settings = storage.hosts.find(hostInStorage => hostInStorage.name === currentHost);\n\n        if (settings) {\n          resolve(settings);\n        } else {\n\n          // No settings for this host yet, make an empty entry\n          settings = {\n            enabled: null,\n            name: currentHost,\n          };\n\n          storage.hosts.push(settings);\n          \n          chrome.storage.local.set({ hosts: storage.hosts }, () => {\n            resolve(settings);\n          });\n\n        }\n\n        reject(new Error('Reading host settings from local storage'));\n      \n      });\n\n    });\n\n  }\n\n  static setHost(mode = 'toggle') {\n\n    const currentHost = window.location.hostname;\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['hosts'], (storage) => {\n\n        if (storage.hosts) {\n\n          const settings = storage.hosts.find(hostInStorage => hostInStorage.name === currentHost);\n\n          const index =  storage.hosts.indexOf(settings);\n\n          storage.hosts[index].enabled = mode === 'toggle' ? !storage.hosts[index].enabled : mode; \n\n          chrome.storage.local.set({ hosts: storage.hosts }, () => {\n\n            if (settings) resolve(storage.hosts[index]);\n\n          });\n\n        }\n      \n      });\n\n    });\n  }\n\n  static getHosts() {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.get(['hosts'], (storage) => {\n\n        if (storage.hosts) resolve(storage.hosts);\n\n        reject(new Error('Reading host settings from local storage'));\n      \n      });\n\n    });\n\n  }\n\n  static resetAllHosts() {\n\n    return new Promise((resolve, reject) => {\n\n      chrome.storage.local.set({ hosts: [] }, () => {\n\n        resolve(true);\n\n      });\n\n      reject(new Error('No resetting hosts'));\n\n    });\n\n  }\n\n}\n","import * as manifest from '../../manifest.json';\n\nimport StorageController from '../controller/storage';\n\nconst displayVersion = document.getElementById('display-version');\n\nconst statusEnabled = document.getElementById('status-enabled');\nconst buttonEnabled = document.getElementById('button-enabled');\n\nconst statusConsent = document.getElementById('status-consent');\nconst buttonConsent = document.getElementById('button-consent');\n\nconst displaySettings = document.getElementById('string-settings');\n\nconst statusToolbar = document.getElementById('status-toolbar');\nconst buttonToolbar = document.getElementById('button-toolbar');\n\nconst displayActive = document.getElementById('active-status');\n\nconst buttonActiveEnable = document.getElementById('active-button-enable');\nconst buttonActiveDisable = document.getElementById('active-button-disable');\n\nconst display = document.getElementById('display');\n\nconst statusHosts = document.getElementById('status-hosts');\nconst buttonResetHosts = document.getElementById('button-reset-hosts');\n\n/**\n * Settings\n */\nconst getSettings = () => {\n  StorageController.getSettings()\n    .then((settings) => {\n      displaySettings.value = JSON.stringify(settings);\n\n      statusEnabled.textContent = settings.enabled;\n      buttonEnabled.textContent = settings.enabled ? 'disable' : 'enable';\n\n      statusToolbar.textContent = settings.toolbar;\n      buttonToolbar.textContent = settings.toolbar ? 'hide' : 'show';\n\n      statusConsent.textContent = settings.consent;\n      buttonConsent.textContent = settings.consent ? 'take' : 'give';\n    })\n    .catch((error) => {\n      displaySettings.value = (error);\n    });\n};\n\nconst getCurrentHostSettings = () => {\n\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n\n    const currentHostname = new URL(tabs[0].url).hostname;\n\n    StorageController.getHostSettings(currentHostname)\n      .then((settings) => {\n        display.value = JSON.stringify(settings);\n\n        displayActive.textContent = settings.enabled === null ? 'not set' : settings.enabled;\n\n        buttonActiveEnable.textContent = 'enable';\n        buttonActiveDisable.textContent = 'disable';\n\n      })\n      .catch((error) => {\n        display.value = (error);\n      });\n\n  });\n\n};\n\nStorageController.getHosts()\n  .then((hosts) => {\n    statusHosts.textContent = 'hosts: '+hosts.length;\n  });\n\ngetSettings();\ngetCurrentHostSettings();\n\n/**\n * Enabled\n */\nbuttonEnabled.addEventListener('click', () => {\n\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n\n    chrome.tabs.sendMessage(tabs[0].id, { command: 'enabled' });\n\n  });\n\n});\n\nchrome.runtime.onMessage.addListener((settings) => {\n  if (settings.enabled === undefined) return;\n  StorageController.getSettings()\n    .then((_settings) => {\n      displaySettings.value = JSON.stringify(_settings);\n      statusEnabled.textContent = _settings.enabled;\n      buttonEnabled.textContent = _settings.enabled ? 'disable' : 'enable';\n    })\n    .catch((error) => {\n      displaySettings.value = (error);\n    });\n});\n\n/**\n * Consent\n */\nbuttonConsent.addEventListener('click', () => {\n\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n\n    chrome.tabs.sendMessage(tabs[0].id, { command: 'consent' });\n\n  });\n\n});\n\nchrome.runtime.onMessage.addListener((settings) => {\n  if (settings.consent === undefined) return;\n  StorageController.getSettings()\n    .then((_settings) => {\n      displaySettings.value = JSON.stringify(_settings);\n      statusConsent.textContent = _settings.consent;\n      buttonConsent.textContent = _settings.consent ? 'take' : 'give';\n    })\n    .catch((error) => {\n      displaySettings.value = (error);\n    });\n});\n\n/**\n * Toolbar\n */\nbuttonToolbar.addEventListener('click', () => {\n\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n\n    chrome.tabs.sendMessage(tabs[0].id, { command: 'toolbar' });\n\n  });\n\n});\n\nchrome.runtime.onMessage.addListener((settings) => {\n  if (settings.toolbar === undefined) return;\n  StorageController.getSettings()\n    .then((_settings) => {\n      displaySettings.value = JSON.stringify(_settings);\n      statusToolbar.textContent = _settings.toolbar;\n      buttonToolbar.textContent = _settings.toolbar ? 'hide' : 'show';\n    })\n    .catch((error) => {\n      displaySettings.value = (error);\n    });\n});\n\n/**\n * Hosts\n */\nbuttonActiveEnable.addEventListener('click', () => {\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    chrome.tabs.sendMessage(tabs[0].id, { command: 'host-enable' });\n  });\n});\nbuttonActiveDisable.addEventListener('click', () => {\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    chrome.tabs.sendMessage(tabs[0].id, { command: 'host-disable' });\n  });\n});\n\nchrome.runtime.onMessage.addListener((settings) => {\n  if (settings.host === undefined) return;\n  displayActive.textContent = settings.host.enabled;\n  display.value = JSON.stringify(settings.host);\n});\n\n/**\n * Reset hosts\n */\nbuttonResetHosts.addEventListener('click', () => {\n  StorageController.resetAllHosts();\n  getCurrentHostSettings();\n});\n\n/**\n * Version\n */\ndisplayVersion.textContent = manifest.version;\n"]}